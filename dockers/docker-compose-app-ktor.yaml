version: "3.8"
services:
  application:
    image: crypto-app-ktor:latest
    container_name: crypto-app-ktor
    environment:
      DATABASE_HOST: "psql"
    depends_on:
      - psql
    ports:
      - "8080:8080"
    expose:
      - "8080"

  psql:
    image: postgres
    container_name: postresql
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    expose:
      - "5432"
    environment:
      POSTGRES_PASSWORD: crypto-pass
      POSTGRES_USER: postgres
      POSTGRES_DB: cryptodevdb

  elasticsearch:
    build:
      context: elk-stack/images/elasticsearch
    volumes:
      - ./volumes/esdata:/usr/share/elasticsearch/data
    ports:
      - "9200:9200"
      - "9300:9300"

  kibana:
    build:
      context: elk-stack/images/kibana
    ports:
      - "5601:5601"
    links:
      - elasticsearch

  zookeeper:
    image: wurstmeister/zookeeper:latest
    expose:
      - "2181"

  kafka:
    image: wurstmeister/kafka:latest
    depends_on:
      - zookeeper
    ports:
      - "9094:9094"
      - "9092:9092"
    volumes:
      - ./volumes/kfdata:/kafka
    links:
      - zookeeper
    environment:
      # Во внутренней сети docker-compose слушаем адрес kafka:9092
      # Из внешней сети docker-compose будем слушать localhost:9094
      # Как альтерантива, можно вычислять адрес как-то так:
      # HOSTNAME_COMMAND: curl http://169.254.169.254/latest/meta-data/public-hostname
      # KAFKA_ADVERTISED_LISTENERS: INSIDE://:9092,OUTSIDE://_{HOSTNAME_COMMAND}:9094
      KAFKA_ADVERTISED_LISTENERS: INSIDE://kafka:9092,OUTSIDE://localhost:9094
      KAFKA_LISTENERS: INSIDE://0.0.0.0:9092,OUTSIDE://0.0.0.0:9094
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INSIDE:PLAINTEXT,OUTSIDE:PLAINTEXT
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_INTER_BROKER_LISTENER_NAME: INSIDE

  logstash:
    build:
      context: elk-stack/images/logstash
    ports:
      - "5044:5044"
      - "1111:1111"
    depends_on:
      - kafka
      - elasticsearch
    environment:
      BOOTSTRAP_SERVERS: "kafka:9092"
    links:
      - elasticsearch
  #      - kafka
  #      - zookeeper

  kafdrop:
    image: obsidiandynamics/kafdrop:3.30.0
    ports:
      - "9000:9000"
    depends_on:
      - kafka
    environment:
      KAFKA_BROKERCONNECT: "kafka:9092"
    links:
      - elasticsearch

volumes:
  postgres_data:
